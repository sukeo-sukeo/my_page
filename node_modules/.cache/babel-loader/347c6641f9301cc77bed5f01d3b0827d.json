{"remainingRequest":"/Users/yusuke/Documents/working/tmp/my_page_add_db/node_modules/thread-loader/dist/cjs.js!/Users/yusuke/Documents/working/tmp/my_page_add_db/node_modules/babel-loader/lib/index.js!/Users/yusuke/Documents/working/tmp/my_page_add_db/node_modules/vuetify/lib/components/VData/VData.js","dependencies":[{"path":"/Users/yusuke/Documents/working/tmp/my_page_add_db/node_modules/vuetify/lib/components/VData/VData.js","mtime":499162500000},{"path":"/Users/yusuke/Documents/working/tmp/my_page_add_db/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yusuke/Documents/working/tmp/my_page_add_db/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yusuke/Documents/working/tmp/my_page_add_db/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}